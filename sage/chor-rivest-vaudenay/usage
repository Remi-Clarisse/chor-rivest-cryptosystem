Une fois Sage lancé, attacher les deux fichiers 'chor-rivest.sage' et 'attack-chor-rivest' à Sage :
  attach("~/chor-rivest-cryptosystem/sage/chor-rivest-vaudenay/chor-rivest.sage")
  attach("~/chor-rivest-cryptosystem/sage/chor-rivest-vaudenay/attack-chor-rivest.sage")

Définir les paramètres du cryptosystème : p un nombre premier et h un entier friable, e.g.
  p = 197
  h = 24

Générer une paire de clé grâce à 'CRGenerateKeys' :
  [PubKey, PrivKey] = CRGenerateKeys (p, h)

Générer le message à chiffer, puis le coder, et le transformer :
  m = generateRandomMessage (p, h)

Chiffrer le message :
  e = CREncrypt (m, PubKey)

Maintenant e est le chiffré du message codé ! Pour le déchiffrer :
  CRDecrypt (e, PubKey, PrivKey) == m

Pour l'attaque de Vaudenay :
  EquivPrivKey = VaudenayAttack (PubKey)
  crackedMessage = CRDecrypt (e, PubKey, EquivPrivKey)

Le calcul des logarithmes est (grossièrement) parallelisé ...
